<%
# XXX: Temporary workaround since using a nil variable causes a NoMethodError,
# and 'instance' returns a proxy and not the ruby object itself.
inst = instance rescue nil
inst = inst.getTarget if inst.respond_to?(:getTarget)

f = taglib("/lib/form")
f.block do
%><table><%
  descriptor.installable_tools.each_with_index do |(tool, name), i|
    f.rowSet(:name => "tool_#{i}") do
      f.entry(:field => "tool") do
        f.checkbox(:title => "#{name} (#{descriptor.env_var(name)})",
                   :json => "#{tool};#{name}",
                   :checked => inst ? inst.is_required?(tool, name) : false)
      end
      # TODO: <input type='text'> for env var name.
      #f.entry(:field => "variable") do
      #  f.checkbox(:title => name, :json => "#{tool};#{name}")
      #end
    end
  end
%></table><%
end
%>
